generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
  binaryTargets = ["native", "rhel-openssl-1.0.x", "debian-openssl-1.1.x", "linux-musl", "windows"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  role      Role       @default(USER)
  recipes   Recipe[]
  comments  Comment[]
  ratings   Rating[]
  favorites Favorite[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Recipe {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  ingredients String
  steps       String
  image       String?
  user        User       @relation(fields: [userId], references: [id])
  userId      Int
  category    Category?  @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  meal        Meal?      @relation(fields: [mealId], references: [id])
  mealId      Int?
  comments    Comment[]
  ratings     Rating[]
  favorites   Favorite[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Category {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  recipes Recipe[]
}

model Meal {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  recipes Recipe[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  recipeId  Int
  createdAt DateTime @default(now())
}

model Rating {
  id        Int      @id @default(autoincrement())
  value     Int
  userId    Int
  recipeId  Int
  user      User     @relation(fields: [userId], references: [id])
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, recipeId])
}

model Favorite {
  id        Int      @id @default(autoincrement())
  userId    Int
  recipeId  Int
  user      User     @relation(fields: [userId], references: [id])
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, recipeId])
}